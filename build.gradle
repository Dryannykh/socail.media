plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.openapi.generator' version '6.3.0'
}

group = 'social.media'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.liquibase:liquibase-core'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.5.3'
	implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation ('org.openapitools:openapi-generator-gradle-plugin:6.3.0') {exclude(module : "slf4j-simple")}
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'com.nimbusds:nimbus-jose-jwt:6.4.2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

apply plugin: 'org.openapi.generator'

openApiGenerate {
	inputSpec = "$project.rootDir/src/main/resources/openapi/api-docs.yml".toString()
	outputDir = "$buildDir/generated/openapi"
	generateModelDocumentation = true
	generatorName = "spring"
	library = "spring-boot"
	apiPackage = "test.social.media.controller"
	modelPackage = "test.social.media.dto"
	invokerPackage = "test.social.media.api"
	configOptions = [
			useSpringBoot3: "true",
			useTags: "true",
			dateLibrary: "java8",
			interfaceOnly: "true",
			skipDefaultInterface: "true"
	]
}

sourceSets  {
	main {
		java {
			srcDir("${openApiGenerate.outputDir.get()}/src/main/java")
		}
	}
}

tasks.compileJava.dependsOn(tasks.openApiGenerate)